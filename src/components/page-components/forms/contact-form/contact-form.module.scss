@import "../../../../scss/mixins/typography";
@import "../../page-component";
@import "../forms";

.field {
    display: block;
    @include fontMedium;
    line-height: $rhythm-unit;
    padding-bottom: #{$rhythm-unit}em;

    &[role=group] {
        display: flex;
        flex-direction: column;
        padding-bottom: 0;

        h2 {
            @include fontMediumVr;
            line-height: $rhythm-unit;
            font-weight: normal;

            & {
                margin-bottom: #{$rhythm-unit/2}em;
            }

            @media (min-width: $screen-md) {

                margin-bottom: 0;
            }
        }

        label {
            cursor: pointer;
            margin-bottom: 0;

            &:not(:last-child) {
                padding-bottom: 0;
            }

            line-height: $rhythm-unit;

            input {
                margin-bottom: 0;
                @media (min-width: $screen-md) {
                    margin-bottom: #{($rhythm-unit - 1)/4}em;
                }
            }
        }
    }

    &.fullWidth {
        width: 100%;

        textarea {
            width: 100%;
            display: block;
            @media (min-width: $screen-md) {

                padding: calc(#{$rhythm-unit*3/4}em) $component-gutter-sm/2;
                margin: calc(#{$rhythm-unit/4}em - 1px) 0;
            }
        }
    }

    abbr {
        text-decoration: none;
        color: red;
    }

    &[type=checkbox], &[type=radio] {
        @include checkbox;

        & + label {

            &.hasError:before {
                border-color: $error-color;
            }

            .error {
                text-align: left;
                margin-left: calc(-1.5em / 0.85);
            }
        }

    }

    &[role=group] .error {
        text-align: left;
    }

    &.file {
        width: 100%;

        div:not(.error) {
            position: relative;
            display: flex;
            flex-direction: row;
            align-items: stretch;

            button {
                @include button-link;
                flex-shrink: 0;
                margin: calc(#{$rhythm-unit/4}em - 2px) 0;
                padding: 0 0.5em;
            }

            input[type=text] {
                border-left: none;
            }

            &.hasValue {
                input[type=text] {
                    border-right: none;
                }
            }

            input[type=file] {
                z-index: 10;
                opacity: 0;
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
            }

            button:last-child {
                display: flex;
                flex-direction: row;
                justify-content: center;
                align-items: center;
                z-index: 20;
                width: 2em;

                &:after {
                    content: none;
                }
            }
        }
    }

    &.hasError {
        padding-bottom: 0;

        input, textarea {
            &, &:before {
                border-color: $error-color;
            }
        }
    }

    input, textarea {
        @include fontMedium;
        width: 100%;
        border: 1px solid $input-grey;
        margin: calc(#{$rhythm-unit/4}em - 2px) 0;
    }

    input {
        line-height: #{1.5*$rhythm-unit}em;
        padding: 0 $column-gutter-sm/2;
    }

    textarea {
        padding: $column-gutter-sm/2;
    }

    .error {
        font-size: 0.85em;
        width: 100%;
        color: $error-color;
        text-align: right;
        min-height: #{$rhythm-unit/0.85}em;
    }

    &.error .submit {
        button {
            background: $input-grey;
            opacity: 0.5;
        }
    }

    &.isSubmitting {
        opacity: 0.5;

        .submit button {
            svg {
                height: 0.8em;
                width: 0.8em;
                margin-left: 1em;
            }

            &:after {
                content: none;
            }
        }
    }
}

.contactForm {

    .submit {
        width: 100%;
        display: flex;
        flex-direction: column;
        @media (min-width: $screen-md) {
            flex-direction: row;
            align-items: flex-start;
        }

        button {
            @include fontLarge;
            display: inline-block;
            align-self: flex-start;
            margin: 0;
            justify-content: space-between;
            padding: 0.5em;
            flex-shrink: 0;

            transition: all $transitionTime ease;
        }

        .messages {
            margin: #{$rhythm-unit}em 0 0 0;

            .success, .error {
                display: flex;
                flex-direction: row;
                align-items: center;
                @media (min-width: $screen-md) {
                    align-items: flex-start;
                }
            }

            .error {
                svg {
                    color: $error-color;
                    margin-right: 0.5em;
                    flex-shrink: 1;
                }
            }

            .success {
                svg {
                    color: $success-color;
                    margin-right: 0.5em;
                    flex-shrink: 1;
                }
            }
        }

        @media (min-width: $screen-md) {
            flex-direction: row;
            .messages {
                margin: 0 0 0 $column-gutter-md;
                flex-grow: 1;
            }
        }
        @media (min-width: $screen-lg) {
            .messages {
                margin: 0 0 0 $column-gutter-lg;
            }
        }

        abbr {
            text-decoration: none;
            color: $error-color;
        }
    }

    &.error .submit {
        button {
            background: $input-grey;
            opacity: 0.5;
        }
    }

    &.isSubmitting {
        opacity: 0.5;

        .submit button {
            svg {
                height: 0.8em;
                width: 0.8em;
                margin-left: 1em;
            }

            &:after {
                content: none;
            }
        }
    }
}

