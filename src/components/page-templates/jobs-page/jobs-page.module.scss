@import "../../page-components/columns/columns";

.jobsList {
    @include columns-component;
    @media (min-width: $screen-md) {
        align-items: stretch;
        justify-content: flex-start;
    }
    li {
        @media (min-width: $screen-md) {
            width: calc((100% / 2) - #{$column-gutter-md});
        }
        @media (min-width: $screen-lg) {
            width: calc((100% / 3) - #{$column-gutter-lg});
        }
        display: flex;
        flex-direction: column;
    }
}

.job {
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    background: $jobs-grey;
    padding: $column-gutter-sm;
    @media (min-width: $screen-md) {
        padding: $column-gutter-md;

    }
    @media (min-width: $screen-lg) {
        padding: $column-gutter-lg;

    }

    transition: background-color 500ms ease;
    transition-delay: 100ms;

    @media (min-width: $screen-md) {

        &:before {
            padding-bottom: 62.5%; /* Minimum aspect ratio */
            content: '';
            float: left;
        }

        &:after {
            display: table;
            content: '';
            clear: both;
        }
    }

    section {
        flex-grow: 1;
        margin-bottom: 0;
        display: flex;
        flex-direction: column;
        @include fontMediumVr;

        & {
            margin-bottom: 0;
        }

        h2 {
            margin-bottom: 0;
            transition: color 500ms ease;
            transition-delay: 100ms;
        }
        &, p, li, time {
            transition: color 500ms ease;
            transition-delay: 100ms;
        }

        p {
            margin-bottom: #{$rhythm-unit*2}em;
        };
    }
    button {
        @include fontMedium;
        flex-grow: 0;
        border: none;
        padding: 0;
        margin: auto 0 0;
        @media (min-width: $screen-md) {
            margin: auto 0 0;
        }
        background: unset;
        align-self: flex-start;
        line-height: $line-height;
        transition: color 500ms ease;
        transition-delay: 100ms;
        @include arrow-link;
        &:after {
            content: url('/images/hf-arrow.svg');
            transition: content 500ms ease;
            transition-delay: 100ms;
        }
    }
    &:hover {
        background: $blue-background;
        section {
            h2 {
                color: $orange;
            }
            &, p, li, time {
                color: white;
            }
        }
        button {
            color: white;
            &:after {
                content: url('/images/hf-arrow.orange.svg');
            }
        }
    }
}
