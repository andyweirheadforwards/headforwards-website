@import "variables";

@mixin flexRow($direction: row, $wrap: wrap, $justify-content: space-between) {
    display: flex;
    flex-direction: $direction;
    margin-bottom: $gutter-medium;
    flex-wrap: $wrap;
    justify-content: $justify-content;
}

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
        & {
            font-size: $min-font-size;
            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}

@mixin fontXLarge {
    font-size: $mod_1*$mod_1 *1rem;
    @include fluid-type($min_width, $max_width, $mod_1*$mod_1 *$min_font, $mod_2*$mod_2 *$min_font);
}
@mixin fontLarge {
    font-size: $mod_1*1rem;
    @include fluid-type($min_width, $max_width, $mod_1 *$min_font, $mod_2 *$min_font);
}
@mixin fontMedium {
    font-size: 1rem;
    @include fluid-type($min_width, $max_width, $min_font, $max_font);
}
@mixin fontSmall {
    font-size: 1rem/$mod_1;
    @include fluid-type($min_width, $max_width, $min_font/$mod_1, $min_font/$mod_2);
}

@mixin headingFontLarge {

    font-size: $mod_1*$mod_1*$mod_1 *1rem;
    @include fluid-type($min_width, $max_width, $mod_1*$mod_1*$mod_1 *$min_font, $mod_2*$mod_2*$mod_2 *$min_font);
}

@mixin headingFontMedium {

    font-size: $mod_1*$mod_1 *1rem;
    @include fluid-type($min_width, $max_width, $mod_1*$mod_1 *$min_font, $mod_2*$mod_2 *$min_font);
}

@mixin headingFontSmall {

    font-size: $mod_1 *1rem;
    @include fluid-type($min_width, $max_width, $mod_1 *$min_font, $mod_2 *$min_font);
}
